import com.intellij.rt.coverage.build.ArtifactBuilder

plugins {
  id 'org.jetbrains.kotlin.jvm'
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

sourceSets {
  test.java.srcDir 'test'
  test.resources.srcDir 'resources'
}

configurations {
  implementation.extendsFrom(externalDependencies)
}

dependencies {
  implementation project(":reporter:offline")
  compileOnly project(":instrumentation")
  compileOnly project(":java6-utils")
  compileOnly project(":offline-runtime")

  testCompileOnly project(":instrumentation")
  testCompileOnly project(":java6-utils")
  testCompileOnly project(":offline-runtime")
  testCompileOnly project(":offline-runtime:api")

  testRuntimeOnly files(project(':instrumentation').jar.archivePath)
  testRuntimeOnly files(project(':offline-runtime:api').jar.archivePath)

  externalDependencies("org.jetbrains.intellij.deps:coverage-report:1.0.21")

  testImplementation('junit:junit:4.13.2')
  testImplementation(files(project(":tests").sourceSets.test.output))
}

def getPublishDependencies() {
  configurations.getByName("externalDependencies").getResolvedConfiguration().getFirstLevelModuleDependencies()
}

ArtifactBuilder.setUpArtifact(project, reporter_jar_name, [":reporter:offline", ":offline-runtime:data"])
